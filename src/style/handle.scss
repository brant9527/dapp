// handle.scss
@import "./themes.scss";
@import "./common.scss";
@mixin themeify {
  @each $theme-name, $theme-map in $themes {
    $theme-map: $theme-map !global; // $theme-map为全局变量
    [data-theme="#{$theme-name}"] & {
      // 判断html的data-theme的属性值  #{}是sass的插值表达式
      @content; // & 嵌套里的父容器标识   @content是混合器插槽，像vue的slot
    }
  }
}

@function themed($key) {
  @return map-get(
    $theme-map,
    $key
  ); // map-get($map,$key) 函数的作用是根据 $key，返回 $key 在 $map 中对应的值。比如themed(bgColor1)返回 #ffffff 或 #1a1a1a。
}

//获取背景颜色
@mixin background_color($color) {
  @include themeify {
    transition: all 0.5s;
    background-color: themed($color);
  }
}

//获取字体颜色
@mixin font_color($color) {
  @include themeify {
    transition: all 0.5s;

    color: themed($color);
  }
}

@mixin border($direction: "bottom") {
  @if ($direction== "bottom") {
    &::after {
      position: absolute;
      content: " ";
      width: 100%;
      height: 1px;
      bottom: 0;
      left: 0;
      background-color: $boder;
      transform: scale(1, 0.5);
    }
  }
  @if ($direction== "top") {
    &::after {
      position: absolute;
      content: " ";
      width: 100%;
      height: 1px;
      top: 0;
      left: 0;
      background-color: $boder;
      transform: scale(1, 0.5);
    }
  }
  @if ($direction== "right") {
    &::after {
      position: absolute;
      content: " ";
      width: 2px;
      height: 100%;
      bottom: 0;
      right: 0;
      background-color: $boder;
      transform: scale(0.5, 1);
    }
  }
  @if ($direction== "left") {
    &::after {
      position: absolute;
      content: " ";
      width: 2px;
      height: 100%;
      bottom: 0;
      left: 0;
      background-color: $boder;
      transform: scale(0.5, 1);
    }
  }
}
